{"version":3,"sources":["chip.png","logo.png","service.js","Chip.jsx","App.jsx","util.js","index.js"],"names":["module","exports","getIsWorking","a","fetch","then","res","json","lastUpdateTime","differenceInMinutes","Date","now","getRandom","min","max","Math","random","Chip","props","update","time","delta","lastTime","state","x","y","speedX","speedY","rotationTime","x0","y0","k","size","isWorking","document","body","clientWidth","clientHeight","setState","requestAnimationFrame","this","chipStyles","animationDuration","left","top","height","width","className","src","chip","alt","style","Component","App","resizeHandler","planeSize","getPlaneProperties","updateTimings","cheat","setTimeout","window","value","console","warn","bind","addEventListener","removeEventListener","logo","href","target","rel","ReactDOM","render","getElementById","isEnabled","current","key","toUpperCase","length"],"mappings":"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","file":"static/js/main.b6fe60a0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/chip.96d9b27e.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.852bfee0.png\";","import differenceInMinutes from 'date-fns/differenceInMinutes';\r\n\r\nconst MAX_DIFFERENCE = 5; // if difference more than MAX_DIFFERENCE we thinking he is away\r\n\r\nexport const getIsWorking = async () => {\r\n    const {\r\n        // serverRunTime,\r\n        lastUpdateTime\r\n      } = await fetch('https://arcane-fortress-59742.herokuapp.com/api/get')\r\n        .then(res => res.json());\r\n      \r\n      if (!lastUpdateTime || differenceInMinutes(Date.now(), lastUpdateTime) > MAX_DIFFERENCE) {\r\n        return false;\r\n      } else {\r\n        return true;\r\n      }\r\n}","import React, { Component } from 'react';\r\nimport chip from './chip.png';\r\n\r\nconst GRAVITY_ACCELERATION = 4000;\r\nconst MAX_START_Y_SPEED = -100;\r\nconst MIN_START_Y_SPEED = -1500;\r\nconst MIN_START_X_SPEED = -1500;\r\nconst MAX_START_X_SPEED = 1500;\r\n\r\nconst getRandom = (min, max) => min + (max - min) * Math.random();\r\n\r\nclass Chip extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.lastTime = 0;\r\n\r\n        this.state = {\r\n            x: 0,\r\n            y: 0,\r\n            speedX: 10,\r\n            speedY: 10,\r\n            rotationTime: 0.3\r\n        }\r\n    }\r\n\r\n    update = (time) => {\r\n        const delta = time - this.lastTime;\r\n\r\n        this.lastTime = time;\r\n\r\n        let { x, y, speedX, speedY, rotationTime } = this.state;\r\n        const { x0, y0, k, size, isWorking } = this.props;\r\n\r\n        if (isWorking) {\r\n            x += speedX * delta / 1000;\r\n        \r\n            speedY += GRAVITY_ACCELERATION * delta / 1000;\r\n    \r\n            y += speedY * delta / 1000;\r\n    \r\n            if (x > document.body.clientWidth\r\n                || y > document.body.clientHeight\r\n                || x < 0 - size) {\r\n                x = x0 + 35 * k;\r\n                y = y0 + 40 * k;\r\n                speedX = getRandom(MIN_START_X_SPEED, MAX_START_X_SPEED);\r\n                speedY = getRandom(MIN_START_Y_SPEED, MAX_START_Y_SPEED);\r\n                rotationTime = getRandom(0.1, 1);\r\n            }\r\n        } else {\r\n            x = x0 + 20 * k;\r\n            y = y0 + 30 * k;            \r\n        }\r\n\r\n        this.setState(() => ({\r\n            x,\r\n            y,\r\n            speedX,\r\n            speedY,\r\n            rotationTime\r\n        }));\r\n\r\n        requestAnimationFrame(this.update);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState((state, { x0, y0, k }) => ({\r\n            x: x0 + 20 * k,\r\n            y: y0 + 30 * k,\r\n            speedX: 10,\r\n            speedY: -20\r\n        }));\r\n        this.update(0);\r\n    }\r\n\r\n    render() {\r\n        const { size, isWorking } = this.props;\r\n        const { x, y, rotationTime } = this.state;\r\n\r\n        const chipStyles = {\r\n            animationDuration: `${isWorking ? rotationTime : 1.7}s`,\r\n            left: `${x}px`,\r\n            top: `${y}px`,\r\n            height: `${size}px`,\r\n            width: `${size}px`,\r\n          };\r\n        return (\r\n            <img className=\"chip\" src={chip} alt=\"chip\" style={chipStyles} />\r\n        );\r\n    }\r\n}\r\n\r\nexport default Chip;\r\n","import React, { Component } from 'react';\r\n\r\nimport { getPlaneProperties } from './util';\r\nimport { getIsWorking } from './service';\r\n\r\nimport Chip from './Chip.jsx';\r\n\r\nimport logo from './logo.png';\r\nimport './styles.css';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      x0: 0,\r\n      y0: 0,\r\n      k: 0,\r\n      size: 0,\r\n      isWorking: false,\r\n      cheat: false\r\n    }\r\n  }\r\n\r\n  resizeHandler = () => {\r\n      const { x0, y0, k, size } = getPlaneProperties();\r\n      this.setState({ x0, y0, k, size });\r\n  }\r\n\r\n  updateTimings = async () => {\r\n    if (!this.state.cheat) {\r\n      const isWorking = await getIsWorking();\r\n      this.setState({ isWorking });\r\n    }\r\n    setTimeout(this.updateTimings, 5000);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.resizeHandler();\r\n    this.updateTimings();\r\n\r\n    window.cheat = (function(value) {\r\n      if (value === true) {\r\n        console.warn('Not real data!');\r\n        this.setState({\r\n          isWorking: !this.state.isWorking,\r\n          cheat: true\r\n        });\r\n      } else {\r\n        console.warn('Cheat disabled. Real state will be updated in seconds.');\r\n        this.setState((state) => ({\r\n          cheat: false\r\n        }))\r\n      }\r\n    }).bind(this);\r\n\r\n    window.addEventListener('resize', this.resizeHandler);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.resizeHandler);\r\n  }\r\n\r\n  render() {\r\n    const { x0, y0, k, size, isWorking } = this.state;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <Chip x0={x0} y0={y0} k={k} size={size} isWorking={isWorking} />\r\n        <img className=\"logo\" src={logo} alt=\"logo\" />\r\n        <div className=\"authors\">\r\n          <span>Designed by <a href=\"https://vk.com/id5486415\" target=\"_blank\" rel='noreferrer noopener'>Mihail Pushkarev</a></span>\r\n          <span>Implemented by <a href=\"https://vk.com/umbertofly\" target=\"_blank\" rel='noreferrer noopener'>Aleksandr Kondratsky</a></span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","/**\r\n * @typedef {PlaneProperties}\r\n * @property {number} x0 - top of render square\r\n * @property {number} y0 - left of render square\r\n * @property {number} k - number of pixels in one percent of size of current square\r\n */\r\n\r\n/**\r\n * Takes clientHeight and clientWidth of document's body and calculates start coordinates and pixel coefficient\r\n * @returns {PlaneProperties}\r\n */\r\nexport const getPlaneProperties = () => {\r\n    const height = document.body.clientHeight;\r\n    const width = document.body.clientWidth;\r\n\r\n    const isPortrait = height > width;\r\n\r\n    const planeSize = isPortrait ? width : height;\r\n\r\n    const x0 = (width - planeSize) / 2;\r\n    const y0 = (height - planeSize) / 2;\r\n    const k = planeSize / 100;\r\n\r\n    const size = planeSize / 6;\r\n\r\n    return {\r\n        x0,\r\n        y0,\r\n        k,\r\n        size\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App.jsx';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nconst PWD = 'IDDQD';\r\nlet isEnabled = false;\r\nlet current = 0;\r\n\r\nwindow.addEventListener('keypress', ({ key }) => {\r\n    if (key.toUpperCase() === PWD[current]) {\r\n        current++;\r\n    } else {\r\n        current = 0;\r\n    }\r\n    if (current === PWD.length) {\r\n        isEnabled = !isEnabled;\r\n        window.cheat(isEnabled);\r\n        current = 0;\r\n    }\r\n});"],"sourceRoot":""}